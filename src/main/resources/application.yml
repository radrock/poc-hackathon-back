server:
  port: 9010

spring:
  application:
    name: Hackathon-MeterReading
  kafka:
    properties:
      schema-registry: http://192.168.1.4:8081
      specific-avro-reader: true
      bootstrap-servers:  192.168.1.15:6667,192.168.1.14:6667,192.168.1.17:6667,192.168.1.16:6667
    consumer:
      group-id: spring-app-hackathon
      topics: meter-reading-power,meter-reading-internal-temperature
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    producer:
      key-serializer:  org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      compression-type: gzip
      acks: all
      properties:
        linger.ms: 1000
        schema.registry.url: http://192.168.1.4:8081
logging:
  level:
    root: info
    com.rte_france.plasma.hackathon: debug
  pattern:
    file: "%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n"
    console: "%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n"

topics:
  meter-reading-power: meter-reading-power
  meter-reading-internal-temp: meter-reading-internal-temperature
  meter-reading-power-it : meter-reading-power-it


temperatures:
  thresholds:
    normal : 200
    ubnormal: 230